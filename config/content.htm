<h1>簡介</h1>
<p>本課程名稱為<a href="http://mdecourse.github.io/cadp2018">電腦輔助設計實習</a> , 承接<a href="http://mdecourse.github.io/cp2018">計算機程式</a>與網際內容管理課程, 並為協同產品設計實習課程的先修課.</p>
<p>課程英文名稱</p>
<p>電腦輔助設計實習:&nbsp; Introduction to Computer-aided Design and Practice</p>
<p>計算機程式: Introduction to Computer Programming&nbsp;</p>
<p>網際內容管理: Web-based Content Management System</p>
<p>協同產品設計實習: Collaborative Product Design and Practice</p>
<p>課程規劃</p>
<p><a href="https://coggle.it/diagram/WzQ9tjCAbqepqWPI/t/%E9%9B%BB%E8%85%A6%E8%BC%94%E5%8A%A9%E8%A8%AD%E8%A8%88%E5%AF%A6%E7%BF%92/7ff3697b0db297209138e7f4ea4d3966eff611b8d3d228fc6aeda2fb112eaf50">2018 Fall 電腦輔助設計實習課程規劃心智圖</a>&nbsp;(under scrum1 At mde)</p>
<p>零組件繪圖系統</p>
<p>近端:&nbsp;<a href="http://solvespace.com">http://solvespace.com</a>&nbsp; (開源免費) or Solidworks or AutoDesk Inventor or Creo Parametric</p>
<p>雲端:&nbsp;<a href="https://www.onshape.com/">https://www.onshape.com/</a>&nbsp; (學生可免費使用)</p>
<p>or</p>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a>&nbsp; (學生可免費使用三年, 近端必須安裝 2.7 GB 套件)</p>
<p></p><h2>雲端 CAD</h2>
<p><span>Dec. 26 2015</span></p>
<p>屬於二十一世紀的電腦輔助機械設計軟體:<span>&nbsp;</span><a href="http://www.onshape.com/">http://www.onshape.com</a></p>
<p>西元 2000 年, 當時的 PTC 公司在著名的 Pro/Engineer 套件中加入 Pro/Web.Link, 當時的 Javascript 技術在 Java 強力橫掃程式界的時候, 還是得透過呼叫 Java 程式庫, 才能夠運行, 但是能夠在嵌入式 Internet Explorer 與 Firefox 瀏覽器中運行的半調子 Engineer to Engineer 二次開發技術, 仍然讓人眼睛為之一亮.</p>
<p>十幾年過去, 採用 Javascript 技術的 Pro/Web.Link 仍然停留在原地, 沒給隨後改名為 Creo Parametric 的參數化模組, 帶來令人振奮的應用, 但是 Javascript 技術自從 2009 年 node.js 發表以來, 就不斷在全球資訊網的前後端環境嚴密整合下, 持續發光發熱, 加上 HTML5 (2010)、WebGL (2009) 與 Git (2005) 技術的推波助瀾, 終於讓 Onshape:<span>&nbsp;</span><a href="http://www.onshape.com/">http://www.onshape.com</a><span>&nbsp;</span>團隊決定自 2012 年開始, 利用這些相關技術 (結合 Javascript V8 與 NoSQL) 打造一套全瀏覽器的雲端電腦輔助機械設計軟體.</p>
<p>Onshpae 的推出, 終於讓二十一世紀的機械設計工程師感受到平版與手機時代的到來, 面對全球無縫整合的產品開發流程, 任何人都可以隨時隨地在有網路連線的地方, 用任何裝置參與協同.</p>
<p>Onshape 的可貴, 不僅解決協同產品開發團隊間, 軟體版次分歧與維護的問題, 而且徹底改變過去產品生命週期管理上, MCAD (Mechanical Computer Aided Design) 軟體套件無法全雲端運作, 所帶來的簽出入時間差異困擾, 讓協同團隊人員, 能夠即時線上協同, 關注同一份設計資料 ,而且整個團隊, 在特定的產品設計專案上, 每個零件與組立圖, 在不同的工作屬性下, 保證只有一份資料.</p>
<p>在此同時, Onshape 團隊也意識到全球自造時代 (Self-manufacturing Era) 將會是二十一世紀最重要的產品設計開發模式之一, 因此套件公開推出時, 允許使用者透過免費方案, 將設計內容公開者, 就可以擁有 5GB 的容量空間, 相信此舉會讓過去數以百萬計的標準零件庫迅速納入旗下, 成為全球各方人員搭配組合新產品的重要來源之一.</p>
<p>尤有甚者, 全雲端全瀏覽器的 MCAD, 將會帶動隨後全球各類 CAX 應用的虛實整合與平行分散運算, 讓網路上閒置的運算資源降到最低.</p>
<p>總而言之, Onshape 的推出, 讓沉悶已久的電腦輔助機械設計界, 重新看到新的契機, 全球協同產品開發不再只是口號, 相信過去幾十年來作威作福的半調子 MCAD &amp; PLM 套件開發者與代理商, 可以深刻記取教訓, 因為真正屬於二十一世紀的電腦輔助機械設計軟體, 已經來了.</p>
<p>機器人定義</p>
<p>Word robot was coined by a Czech novelist Karel Capek in a 1920 play titled Rassum's Universal Robots (RUR), Robot in Czech is a word for worker or servant</p>
<p>Definition of robot (可程式化之多功能機械稱為機器人):</p>
<p>1) Any machine made by by one of our members: Robot Institute of America</p>
<p>2) A robot is a reprogrammable, multifunctional manipulator designed to move material, parts, tools or specialized devices through variable programmed motions for the performance of a variety of tasks: Robot Institute of America, 1979</p>
<p>機電資整合課程教育目標</p>
<p>Infomechatronics Course Objectives</p>
<ul>
<li>To produce an engineering graduate with broad knowledge and skills across the three engineering disciplines of Information Technology, Electrical &amp; Electronic and Mechanical &amp; Manufacturing Engineering who meet the needs of industry with respect to the design, fabrication and service of computer controlled industrial machinery and consumer products.</li>
<li>To provide a broad-based academic training program aimed at producing future industry managers who can be effective in research and technology whilst leading industry in an innovative, efficient and socially responsible way.</li>
<li>To provide, prior to entry to the work force, a course of study in engineering science and technology with adequate awareness of the importance of a multi-disciplinary approach to the optimal design and fabrication of computer controlled machinery.</li>
<li>To develop good communication, leadership, managerial, and life long learning skills.</li>
<li>To develop in graduates a high degree of competence and confidence within their chosen areas of study that will facilitate their ready acceptance into work force in commerce, industry &amp; government.</li>
<li>To develop in graduates a sound knowledge and understanding of the fundamentals of their discipline so that they can adapt to scientific, technological and social changes.</li>
<li>To develop the capability for critical thinking and analysis to apply the knowledge gained from their course of study to the solution of real life problems</li>
<li>To instill a sensitivity to and understanding of culture and gender related issues as they relate to professional and ethical practices</li>
</ul>
<p><!-- 暫時不用
<p><canvas id="cango_gear" width="700" height="400"></canvas></p>
<p>
<script type="application/lua">
js = require "js"
window = js.global
Array = js.global.Array
canvas = window.document:getElementById("cango_gear")

-- 將 lua table 轉為 new JavaScript Object 的方法
-- e.g. Object{mykey="myvalue"}
function Object(t)
    local o = js.new(js.global.Object)
    for k, v in pairs(t) do
        assert(type(k) == "string" or js.typeof(k) == "symbol", "JavaScript only has string and symbol keys")
        o[k] = v
    end
    return o
end

-- javascript constructor
cgo = js.new(window.Cango, "cango_gear")
--local path = js.new(window.Path)
local shape = js.new(window.Shape)
-- Javascript 變數
shapedefs = window.shapeDefs
-- 角度轉為徑度
deg = math.pi/180

function cangoGear(m, n, pa)
    -- pr 為節圓半徑
    pr = n*m/2 -- gear Pitch radius
    data = js.new(window.createGearTooth, m, n, pa)
    gearTooth = js.new(window.Path, data, Object{
      fillColor= "#ddd0dd",
      border= true,
      strokeColor= "#606060" })
    gearTooth:rotate(180/n) -- rotate gear 1/2 tooth to mesh
    gear = gearTooth:dup()
    for i = 1, n-1 do
        newTooth = gearTooth:dup()
        newTooth:rotate(360*i/n)
        gear:appendPath(newTooth)
    end

    -- 建立軸孔
    hr = 0.6*pr -- diameter of gear shaft
    shaft = js.new(window.Path, shapedefs:circle(hr))
    gear:appendPath(shaft)
    return gear
end

n1 = 13
n2 = 24
n3 = 21
reduced_ratio = 0.5
-- 使用 80% 的畫布寬度
m = 0.8*(canvas.width)/((n1+n2+n3)*reduced_ratio)
cx = (canvas.width)/2
cy = (canvas.height)/2
-- 設定共同的壓力角
pa = 25
pr1 = n1*m/2
pr2 = n2*m/2
pr3 = n3*m/2
-- 建立 gear
gear1 = cangoGear(m, n1, pa)
gear2 = cangoGear(m, n2, pa)
gear3 = cangoGear(m, n3, pa)

deg = math.pi/180
rotate_speed = 12*deg

function draw()
    cgo:clearCanvas()

    gear1.transform:translate(cx-(pr1+pr2)*reduced_ratio, cy)
    gear1.transform:scale(reduced_ratio)
    gear1.transform:rotate(0)
    gear1:rotate(rotate_speed)
    cgo:render(gear1)
    
    gear2.transform:translate(cx, cy)
    gear2.transform:scale(reduced_ratio)
    gear2.transform:rotate(180+(360/n2/2))
    gear2:rotate(-(rotate_speed)*n1/n2)
    cgo:render(gear2)
    
    gear3.transform:translate(cx+(pr2+pr3)*reduced_ratio, cy)
    gear3.transform:scale(reduced_ratio)
    gear3.transform:rotate(180+(360/n3/2)+(180+(360/n2/2))*n2/n3)
    gear3:rotate((rotate_speed*n1/n2)*(n2/n3))
    cgo:render(gear3)
    print(gear1:toString())
end

--draw()
window:setInterval(draw, 2)
</script>
--></p>
<p><img src="/images/three_gears.png" width="790" height="367" alt=""></p>
<h2>大學</h2>
<p>二十一世紀大學</p>
<p>二十一世紀, 在網路科技的推波助瀾下, 許多行業與組織都產生了本質上的變化, 大學, 這個經常被稱為象牙塔的最後防線, 也終於必須因應全球化知識經濟的快速發展, 而做出相當程度的進化, 否則難逃被淘汰的命運.</p>
<p>從許多文獻的觀察可以得知, 二十一世紀的大學, 必須讓團隊中特定比例的成員, 擁抱知識創業的趨勢.</p>
<p>在此, 我們認為, 至少 70% 的大學成員必須俱備知識創業的能力與作為, 其餘的成員則仍能一如既往, 按照本身的認知, 從事任何自己有興趣的教學與研究, 而無需受到是否真正達到所謂知識的精進或創業獲利的約束.</p>
<p>Intellectual Entrepreneurship (知識創業)</p>
<p>Intellectual Entrepreneurship is a philosophy and vision of education viewing academics as "innovators" and "agents of change." It focuses on creating cross-disciplinary and multi-institutional collaborations designed to produce intellectual advancements (知識進展) with a capacity to provide real solutions (真正的解決方案) to society's problems and needs. Intellectual Entrepreneurship is academic engagement for the purpose of changing lives.</p>
<p>Intellectual Entrepreneurship moves the mission of institutions of higher learning from "advancing the frontiers of knowledge" (推進知識前緣) and "preparing tomorrow's leaders" (培育未來領導人) to also "serving as engines of economic and social development." (成為經濟與社會發展的引擎) In the process, the role of faculty member and student evolves from that of "intellectual provocateur" (知識激發者)to becoming what might be called an "intellectual entrepreneur." (知識創業者) Intellectual Entrepreneurship includes a readiness to seek out opportunities, undertake the responsibility associated with each and tolerate the uncertainty that comes with initiating genuine innovation. Intellectual Entrepreneurship changes the model and metaphor of higher education from one of "apprenticeship-certification-entitlement" (學徒-認証-授權) to one of "discovery-ownership-accountability." (發現-擁有-負責)</p>
<p>Intellectual Entrepreneurship is premised on the belief that intellect is not limited to the academy and entrepreneurship is not restricted to or synonymous with business. Entrepreneurship is a process of cultural innovation. (創業是一種文化創新的過程) While the creation of material wealth is one expression of entrepreneurship, at a more profound level entrepreneurship is an attitude for engaging the world. Intellectual entrepreneurs, both inside and outside universities, take risks and seize opportunities (承擔風險並緊握機會), discover and create knowledge (發現並創造知識), innovate (創新) , collaborate (協同) and solve problems in any number of social realms (解決社會範疇上的問題): corporate, non-profit, government, and education (企業, 非營利, 政府與教育單位).</p>
<p>Intellectual entrepreneurs understand that genuine collaboration between universities and the public is tantamount to more than increased "access" to the academy's intellectual assets. It is more than "knowledge transfer"--the exportation of neatly wrapped solutions rolling off the campus conveyer belt. Collaboration demands mutual humility and respect, joint ownership of learning and co-creation of an unimagined potential for innovation--qualities that move universities well beyond the typical elitist sense of "service." Knowledge, after all, involves the integration of theory, practice and production (知識終究包括理論, 實踐與生產的整合).</p>
<p>參考資料:</p>
<ul>
<li><a href="https://www.educause.edu/ir/library/pdf/ERM1010.pdf">https://www.educause.edu/ir/library/pdf/ERM1010.pdf</a>&nbsp; or <a href="/downloads/Innovating%20the 21stCentury University.pdf">Innovating the 21st Century University.pdf</a></li>
<li><a href="http://www.huffingtonpost.com/otto-scharmer/u-lab-reinventing-the-21s_b_5669425.html">http://www.huffingtonpost.com/otto-scharmer/u-lab-reinventing-the-21s_b_5669425.html</a></li>
<li><a href="https://upcommons.upc.edu/bitstream/handle/2099/5970/2006-01_eng_van_ginkel.pdf">https://upcommons.upc.edu/bitstream/handle/2099/5970/2006-01_eng_van_ginkel.pdf</a>&nbsp;</li>
<li><a href="https://agenda.weforum.org/2015/05/5-ways-universities-have-already-changed-in-the-21st-century/">https://agenda.weforum.org/2015/05/5-ways-universities-have-already-changed-in-the-21st-century/</a></li>
<li><a href="https://www.nie.edu.sg/docs/default-source/te21_docs/te21_executive-summary_14052010---updated.pdf">https://www.nie.edu.sg/docs/default-source/te21_docs/te21_executive-summary_14052010---updated.pdf</a>&nbsp;</li>
<li><a href="http://www.ut-ie.com/">http://www.ut-ie.com/</a><span>&nbsp;</span>(知識創業)</li>
</ul><h1>工具</h1>
<p>Geometirc Modeling Kernel</p>
<p><a href="https://en.wikipedia.org/wiki/Parasolid">Parasolid</a><span>&nbsp;</span>- 由<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/Shape_Data_Limited">https://en.wikipedia.org/wiki/Shape_Data_Limited</a><span>&nbsp;</span>開發, 目前在<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/Siemens">Siemens</a><span>&nbsp;</span>旗下.</p>
<p><a href="https://en.wikipedia.org/wiki/ACIS">ACIS</a><span>&nbsp;</span>- 由<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/Spatial_Corp">https://en.wikipedia.org/wiki/Spatial_Corp</a><span>&nbsp;</span>開發, 源自<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/Romulus_(modelling_kernel)">https://en.wikipedia.org/wiki/Romulus_(modelling_kernel)</a>, 目前在<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/Dassault_Syst%C3%A8mes">Dassault</a><span>&nbsp;</span>旗下.</p>
<p><a href="https://en.wikipedia.org/wiki/ShapeManager">ShapeManager</a><span>&nbsp;</span>- 2001 年從<span>&nbsp;</span><a href="https://en.wikipedia.org/wiki/ACIS">ACIS</a><span>&nbsp;</span>分出, 由 AutoDesk 公司開發, 用於 Inventor.</p><h2>Solvespace</h2>
<p><a href="http://solvespace.com">http://solvespace.com</a>&nbsp;</p>
<p>參考資料:</p>
<p><a href="http://mde.tw/2017springcd/blog/midterm-collaboration-evaluation.html">http://mde.tw/2017springcd/blog/midterm-collaboration-evaluation.html</a>&nbsp;</p>
<p>平面多連桿機構模擬:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import math
import time
# 利用 matplotlib 程式庫畫出 contour 輪廓
import matplotlib.pyplot as plt
 
class Coord(object):
    def __init__(self,x,y):
        self.x = x
        self.y = y
 
    def __sub__(self,other):
        # This allows you to substract vectors
        return Coord(self.x-other.x,self.y-other.y)
 
    def __repr__(self):
        # Used to get human readable coordinates when printing
        return "Coord(%f,%f)"%(self.x,self.y)
 
    def length(self):
        # Returns the length of the vector
        return math.sqrt(self.x**2 + self.y**2)
 
    def angle(self):
        # Returns the vector's angle
        return math.atan2(self.y,self.x)
 
def normalize(coord):
    return Coord(
        coord.x/coord.length(),
        coord.y/coord.length()
        )
 
def perpendicular(coord):
    # Shifts the angle by pi/2 and calculate the coordinates
    # using the original vector length
    return Coord(
        coord.length()*math.cos(coord.angle()+math.pi/2),
        coord.length()*math.sin(coord.angle()+math.pi/2)
        )
 
 
# 點類別
class Point(object):
    # 起始方法
    def __init__(self, x, y):
        self.x = x
        self.y = y
 
    # 加入 Eq 方法
    def Eq(self, pt):
        self.x = pt.x
        self.y = pt.y
 
    # 加入 setPoint 方法
    def setPoint(self, px, py):
        self.x = px
        self.y = py
 
    # 加上 distance(pt) 方法, 計算點到 pt 的距離
    def distance(self, pt):
        self.pt = pt
        x = self.x - self.pt.x
        y = self.y - self.pt.y
        return math.sqrt(x * x + y * y)
 
 
# Line 類別物件
class Line(object):
 
    # 起始方法
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        # 直線的第一點, 設為線尾
        self.Tail = self.p1
        # 直線組成的第二點, 設為線頭
        self.Head = self.p2
        # 直線的長度屬性
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))
 
    # setPP 以指定頭尾座標點來定義直線
    def setPP(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.Tail = self.p1
        self.Head = self.p2
        self.length = math.sqrt(math.pow(self.p2.x-self.p1.x, 2)+math.pow(self.p2.y-self.p1.y,2))
 
    # setRT 方法 for Line, 應該已經確定 Tail 點, 然後以 r, t 作為設定 Head 的參考
    def setRT(self, r, t):
        self.r = r
        self.t = t
        x = self.r * math.cos(self.t)
        y = self.r * math.sin(self.t)
        self.Tail.Eq(self.p1)
        self.Head.setPoint(self.Tail.x + x,self.Tail.y + y)
 
    # getR 方法 for Line
    def getR(self):
        # x 分量與 y 分量
        x = self.p1.x - self.p2.x
        y = self.p1.y - self.p2.y
        return math.sqrt(x * x + y * y)
 
    # 根據定義 atan2(y,x), 表示 (x,y) 與 正 x 軸之間的夾角, 介於 pi 與 -pi 間
    def getT(self):
        x = self.p2.x - self.p1.x
        y = self.p2.y - self.p1.y
        if (math.fabs(x) &lt; math.pow(10,-100)):
            if(y &lt; 0.0):
                return (-math.pi/2)
            else:
                return (math.pi/2)
        else:
            return math.atan2(y, x)
 
    # setTail 方法 for Line
    def setTail(self, pt):
        self.pt = pt
        self.Tail.Eq(pt)
        self.Head.setPoint(self.pt.x + self.x, self.pt.y + self.y)
 
    # getHead 方法 for Line
    def getHead(self):
        return self.Head
 
    def getTail(self):
        return self.Tail
 
 
class Link(Line):
    def __init__(self, p1, p2):
        self.p1 = p1
        self.p2 = p2
        self.length = math.sqrt(math.pow((self.p2.x - self.p1.x), 2) + math.pow((self.p2.y - self.p1.y), 2))
 
 
class Triangle(object):
    def __init__(self, p1, p2, p3):
        self.p1 = p1
        self.p2 = p2
        self.p3 = p3
 
    def getLenp3(self):
        p1 = self.p1
        ret = p1.distance(self.p2)
        return ret
 
    def getLenp1(self):
        p2 = self.p2
        ret = p2.distance(self.p3)
        return ret
 
    def getLenp2(self):
        p1 = self.p1
        ret = p1.distance(self.p3)
        return ret
 
    # 角度
    def getAp1(self):
        ret = math.acos(((self.getLenp2() * self.getLenp2() + self.getLenp3() * self.getLenp3()) - self.getLenp1() * self.getLenp1()) / (2* self.getLenp2() * self.getLenp3()))
        return ret
 
    def getAp2(self):
        ret =math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp3() * self.getLenp3()) - self.getLenp2() * self.getLenp2()) / (2* self.getLenp1() * self.getLenp3()))
        return ret
 
    def getAp3(self):
        ret = math.acos(((self.getLenp1() * self.getLenp1() + self.getLenp2() * self.getLenp2()) - self.getLenp3() * self.getLenp3()) / (2* self.getLenp1() * self.getLenp2()))
        return ret
 
    # ends Triangle def
    # 透過三個邊長定義三角形
    def setSSS(self, lenp3, lenp1, lenp2):
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        self.lenp2 = lenp2
        self.ap1 = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2* self.lenp2 * self.lenp3))
        self.ap2 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2* self.lenp1 * self.lenp3))
        self.ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2* self.lenp1 * self.lenp2))
 
    # 透過兩個邊長與夾角定義三角形
    def setSAS(self, lenp3, ap2, lenp1):
        self.lenp3 = lenp3
        self.ap2 = ap2
        self.lenp1 = lenp1
        self.lenp2 = math.sqrt((self.lenp3 * self.lenp3 + self.lenp1 * self.lenp1) - 2* self.lenp3 * self.lenp1 * math.cos(self.ap2))
        #等於 SSS(AB, BC, CA)
 
    def setSaSS(self, lenp2, lenp3, lenp1):
        self.lenp2 = lenp2
        self.lenp3 = lenp3
        self.lenp1 = lenp1
        if(self.lenp1 &gt; (self.lenp2 + self.lenp3)):
        #CAB 夾角為 180 度, 三點共線且 A 介於 BC 之間
            ret = math.pi
        else :
            # CAB 夾角為 0, 三點共線且 A 不在 BC 之間
            if((self.lenp1 &lt; (self.lenp2 - self.lenp3)) or (self.lenp1 &lt; (self.lenp3 - self.lenp2))):
                ret = 0.0
            else :
            # 透過餘絃定理求出夾角 CAB 
                ret = math.acos(((self.lenp2 * self.lenp2 + self.lenp3 * self.lenp3) - self.lenp1 * self.lenp1) / (2 * self.lenp2 * self.lenp3))
        return ret
 
    # 取得三角形的三個邊長值
    def getSSS(self):
        temp = []
        temp.append( self.getLenp1() )
        temp.append( self.getLenp2() )
        temp.append( self.getLenp3() )
        return temp
 
    # 取得三角形的三個角度值
    def getAAA(self):
        temp = []
        temp.append( self.getAp1() )
        temp.append( self.getAp2() )
        temp.append( self.getAp3() )
        return temp
 
    # 取得三角形的三個角度與三個邊長
    def getASASAS(self):
        temp = []
        temp.append(self.getAp1())
        temp.append(self.getLenp1())
        temp.append(self.getAp2())
        temp.append(self.getLenp2())
        temp.append(self.getAp3())
        temp.append(self.getLenp3())
        return temp
 
    #2P 2L return mid P
    def setPPSS(self, p1, p3, lenp1, lenp3):
        temp = []
        self.p1 = p1
        self.p3 = p3
        self.lenp1 = lenp1
        self.lenp3 = lenp3
 
        #bp3 is the angle beside p3 point, cp3 is the angle for line23, p2 is the output
        line31 = Line(p3, p1)
        self.lenp2 = line31.getR()
        #self.lenp2 = self.p3.distance(self.p1)
        #這裡是求角3
        ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp2 * self.lenp2) - self.lenp3 * self.lenp3) / (2 * self.lenp1 * self.lenp2))
        #ap3 = math.acos(((self.lenp1 * self.lenp1 + self.lenp3 * self.lenp3) - self.lenp2 * self.lenp2) / (2 * self.lenp1 * self.lenp3))
        bp3 = line31.getT()
        cp3 = bp3 - ap3
        temp.append(p3.x + self.lenp1*math.cos(cp3))#p2.x
        temp.append(p3.y + self.lenp1*math.sin(cp3))#p2.y
        return temp
 
# 以上為相關函式物件的定義區
# 全域變數
midpt = Point(0, 0)
tippt = Point(0, 0)
contour = []
 
# 幾何位置輸入變數
x=10
y=10
r=10
 
# 其他輸入變數
theta = 0
degree = math.pi/180.0
dx = 2
dy = 4
 
#set p1.p2.p3.p4 position
p1 =  Point(150,100)
p2 =  Point(150,200)
p3 =  Point(300,300)
p4 =  Point(350,100)
 
#create links
line1 =  Link(p1,p2)
line2 =  Link(p2,p3)
line3 =  Link(p3,p4)
line4 =  Link(p1,p4)
line5 =  Link(p2,p4)
 
link2_len = p2.distance(p3)
link3_len = p3.distance(p4)
 
triangle1 =  Triangle(p1,p2,p4)
triangle2 =  Triangle(p2,p3,p4)
 
def simulate():
    global theta, midpt, oldpt
    theta += dx
    p2.x = p1.x + line1.length*math.cos(theta*degree)
    p2.y = p1.y - line1.length*math.sin(theta*degree)
    p3.x, p3.y = triangle2.setPPSS(p2,p4,link2_len,link3_len)
    # 計算垂直單位向量
    a = Coord(p3.x, p3.y)
    b = Coord(p2.x, p2.y)
    normal = perpendicular(normalize(a-b))
    midpt.x = (p2.x + p3.x)/2
    midpt.y = (p2.y + p3.y)/2
    tippt.x = midpt.x + 150*normal.x
    tippt.y = midpt.y + 150*normal.y
    # 印出座標點
    #print(round(tippt.x, 2), round(tippt.y, 2))
    if theta &lt; 360:
        contour.append((round(tippt.x, 2), round(tippt.y, 2)))
 
for i in range(180):
    simulate()
# 印出 contour 
#print(contour)
 
x_list = [x for (x, y) in contour]
y_list = [y for (x, y) in contour]
 
plt.xlabel('x coordinate')
plt.ylabel('y coordinate')
 
plt.plot(x_list, y_list)
plt.show()</pre>
<p></p><h2>Onshape</h2>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a>&nbsp;</p>
<h2>Solidworks</h2>
<p>取得安裝檔案</p><h2>V-rep</h2>
<p>參考資料:</p>
<p><a href="http://lab.kmol.info/2017fall/blog/kmol-2017-fall-event-driven-programming-design.html">http://lab.kmol.info/2017fall/blog/kmol-2017-fall-event-driven-programming-design.html</a>&nbsp;</p>
<p><a href="http://mde.tw/2017springcd/blog/vrep-introduction.html">http://mde.tw/2017springcd/blog/vrep-introduction.html</a>&nbsp;</p>
<p>One-link Robot Velocity Control</p>
<p>One-link manipulator Python3 remote API program:</p>
<p>Joint Properties -</p>
<p>Torque/Force Mode.</p>
<p>Moter enabled with Maximum torque setup and zero target velocity.</p>
<p>Joint ObjectName: Revolute_joint</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>One-link Robot Position Control</p>
<p>One-link manipulator Python3 remote API program:</p>
<p>Joint Properties -</p>
<p>Torque/Force Mode.</p>
<p>Moter enabled with Maximum torque setup and zero target velocity.</p>
<p>Joint ObjectName: Revolute_joint</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys, math
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
deg = math.pi/180
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)
# 每步 1 度, 轉兩圈
#setJointPosition(1, 720)
# 每步 0.1  度, 轉720 步
#setJointPosition(0.1, 720)
 
'''
三軸同動時
simxPauseCommunication(clientID,1);
simxSetJointPosition(clientID,joint1Handle,joint1Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint2Handle,joint2Value,simx_opmode_oneshot);
simxSetJointPosition(clientID,joint3Handle,joint3Value,simx_opmode_oneshot);
simxPauseCommunication(clientID,0);</pre>
<p>Fourbar Linkage Velocity Control</p>
<p>the First Joint properties -</p>
<p>Torque/Force mode with motor enabled and target velocity 120 deg/s and maximum torque 50 N*m.</p>
<p>Joint ObjectName: Revolute_joint</p>
<p>All other joints with Torque/Force mode without motor enabled.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
while True:
    choice = input("(e to exit, p to pause and enter to exec)&gt;")
    if choice == "e":
        print("exiting")
        vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
        break
    elif choice == "p":
        vrep.simxPauseSimulation(clientID, vrep.simx_opmode_oneshot_wait)
    else:
        vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot_wait)</pre>
<p>Fourbar Linkage Position Control</p>
<p>V-rep Fourbar linkage remote API program:</p>
<p>the First Joint properties -</p>
<p>Passive mode with Hybrid operation.</p>
<p>Position control (PID) with proportional parameter 0.1 without I and D controls.</p>
<p>Joint ObjectName: Revolute_joint</p>
<p>All other joints properties -</p>
<p>Inverse kinematics mode with Hybrid operation.</p>
<p>Position control (PID) with proportional parameter 0.1 without I and D controls.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10,72)</pre>
<p><span>與上述四連桿位置控制流程相同, 但是由 Python3 remote API 程式負責控制 V-rep 的模擬啟動與模擬終止.</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep, math
import sys
# child threaded script: 
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
#啟動模擬
vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
deg = math.pi/180
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
#errorCode=vrep.simxSetJointTargetVelocity(clientID,Revolute_joint_handle,2, vrep.simx_opmode_oneshot_wait)
 
def setJointPosition(incAngle, steps):
    for i  in range(steps):
        errorCode=vrep.simxSetJointPosition(clientID, Revolute_joint_handle, i*incAngle*deg, vrep.simx_opmode_oneshot_wait)
    #終止模擬
    vrep.simxStopSimulation(clientID, vrep.simx_opmode_oneshot_wait)
 
# 每步 10 度, 轉兩圈
setJointPosition(10, 72)</pre>
<p><span>兩軸同動資料傳送:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import vrep
import sys, math
# child threaded script: 
# 內建使用 port 19997 若要加入其他 port, 在  serve 端程式納入
#simExtRemoteApiStart(19999)
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('127.0.0.1', 19997, True, True, 5000, 5)
 
if clientID!= -1:
    print("Connected to remote server")
else:
    print('Connection not successful')
    sys.exit('Could not connect')
 
errorCode,Revolute_joint_handle=vrep.simxGetObjectHandle(clientID,'Revolute_joint',vrep.simx_opmode_oneshot_wait)
 
errorCode0,Revolute_joint_handle0=vrep.simxGetObjectHandle(clientID,'Revolute_joint0',vrep.simx_opmode_oneshot_wait)
 
if errorCode == -1:
    print('Can not find left or right motor')
    sys.exit()
 
deg = math.pi/180
 
#vrep.simxStartSimulation(clientID, vrep.simx_opmode_oneshot)
 
for i in range(36):
    vrep.simxSynchronous(clientID,True)
    vrep.simxPauseCommunication(clientID,True)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle, 10*deg, vrep.simx_opmode_oneshot)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle0, 10*deg, vrep.simx_opmode_oneshot)
    vrep.simxPauseCommunication(clientID, False)
    vrep.simxSynchronous(clientID, False)
 
    vrep.simxSynchronous(clientID,True)
    vrep.simxPauseCommunication(clientID,True)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle, -10*deg, vrep.simx_opmode_oneshot)
    vrep.simxSetJointPosition(clientID, Revolute_joint_handle0, -10*deg, vrep.simx_opmode_oneshot)
    vrep.simxPauseCommunication(clientID, False)
    vrep.simxSynchronous(clientID, False)</pre>
<p></p><h2>Git</h2>
<p><a href="https://git-scm.com/">https://git-scm.com/</a>&nbsp;</p>
<p><a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a>&nbsp;</p>
<p><a href="https://github.com/">https://github.com/</a>&nbsp;</p>
<p><a href="http://www.globallegalchronicle.com/microsofts-7-5-billion-acquisition-of-github/">http://www.globallegalchronicle.com/microsofts-7-5-billion-acquisition-of-github/</a>&nbsp;</p>
<p>git 常用指令</p>
<p>git add .</p>
<p>新增所有改版內容</p>
<p>git commit -m "提交訊息, 用來辨識版本"</p>
<p>在近端提交改版內容</p>
<p>git push</p>
<p>將近端改版內容推送到遠端</p>
<p>git pull</p>
<p>拉下遠端新版本內容, 在 fossil scm 使用 fossil update</p>
<p>git log</p>
<p>查驗 git 提交推送紀錄</p>
<p>git status</p>
<p>查驗狀態</p>
<p>git 新增提交推送的身分綁定</p>
<p>以 scrum1@mde.tw 註冊帳號為 scrum-1 為例:</p>
<p>git config --global user.name "scrum-1"</p>
<p>git config --global user.email "scrum1@mde.tw"</p>
<p>若網路直接連線過慢, 可以透過 proxy 執行 git</p>
<p>git config --global http.proxy http://proxy.kmol.info:3128</p>
<p>以上的 git config 會將設定存入 Y:/home/.gitconfig 檔案中</p>
<p>刪除近端與遠端的 Git 分支.</p>
<p>To delete a local branch</p>
<p>git branch -D the_local_branch</p>
<p>To remove a remote branch</p>
<p>git push origin :the_remote_branch</p>
<p>or</p>
<p>git push origin --delete the_remote_branch</p><h2>Leo Editor</h2>
<p><a href="http://www.leoeditor.com/">http://www.leoeditor.com/</a>&nbsp;</p>
<h2>SCiTE</h2>
<p><a href="https://www.scintilla.org/SciTE.html">https://www.scintilla.org/SciTE.html</a>&nbsp;</p>
<p>利用 SciTE 執行 Pelican 網誌 Markdown 轉為 html:</p>
<p>SciTEUser.properties 設定</p>
<p>以下的設定, 是將近端與遠端<span>&nbsp;</span><a href="https://github.com/getpelican/pelican">Pelican</a><span>&nbsp;</span>轉檔指令, 設為 Pelican-blog 與 Github-blog 下拉式功能表, 位於 Tools-Go 下方, 唯一的限制是, 當執行這兩個指令時,<span>&nbsp;</span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span>&nbsp;</span>必須處於開啟 content 目錄之外的 local_publishconf.py 檔案, 因為<span>&nbsp;</span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span>&nbsp;</span>會以開啟檔案所在目錄, 執行所設定的<span>&nbsp;</span><a href="https://github.com/getpelican/pelican">Pelican</a><span>&nbsp;</span>指令.</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">import Properties\python
import _platform
import _config
 
#~ #  1142  Pelican-blog
command.name.42.*=Pelican-blog
command.42.*="pelican content -o blog -s local_publishconf.py"
#command.subsystem.42.*=2
#command.quiet.42.*=1
command.shortcut.42.*=Ctrl+Shift+P
 
#~ #  1143 Github-blog
command.name.43.*=Github-blog
command.43.*="pelican content -o blog -s publishconf.py"
#command.subsystem.42.*=2
#command.quiet.42.*=1
command.shortcut.43.*=Ctrl+Shift+G</pre>
<div></div>
<div>啟動 IPv4 或 IPv6 www 伺服器
<p>當<span>&nbsp;</span><a href="https://github.com/getpelican/pelican">Pelican</a><span>&nbsp;</span>轉檔指令執行結束後,<span>&nbsp;</span><a href="http://www.scintilla.org/SciTE.html">SciTE</a><span>&nbsp;</span>會在輸出區列出執行結束訊息, 若轉檔過程發生錯誤, 也會一併顯示. 之後為了檢視轉換完成的近端簡報或網誌檔案, 必須將原先位於<span>&nbsp;</span><a href="http://leoeditor.com/">Leo Editor</a><span>&nbsp;</span>button 區的按鈕 Python3 程式移出, 分別存為 .py 檔案.</p>
<p>由於原先的<span>&nbsp;</span><a href="http://leoeditor.com/">Leo Editor</a><span>&nbsp;</span>button 位於 users 目錄中執行, 因此轉出的 .py 檔案也存入 users 目錄中, 程式內容如下:</p>
<p>users/ipv4_www_server.py 程式檔</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#ipv4_www_server.py 存入 users 目錄
import os
import subprocess
import threading
import http.server, ssl
 
def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()
 
# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</pre>
<p><span>users/ipv6_www_server.py 程式檔</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">#ipv6_www_server.py 存入 users 目錄
import os
import subprocess
import threading
import socket
import http.server, ssl
 
class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
 
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '::1'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()
 
# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</pre>
<p></p>
</div><h2>TinyCC</h2>
<p><a href="https://bellard.org/tcc/">https://bellard.org/tcc/</a>&nbsp;</p>
<h2>CMSimfly</h2>
<p><a href="https://github.com/chiamingyen/cmsimfly">https://github.com/chiamingyen/cmsimfly</a></p>
<h1>應用範例</h1>
<p>學習電腦輔助設計實習的目的在利用數位科技技術解決問題, 所謂數位科技技術包括程式套件、網路與資料庫等元件的組合.</p>
<p>基本流程為:</p>
<ol>
<li>如何取得、傳輸並處理資料?</li>
<li>如何儲存資料?</li>
<li>如何呈現資料?</li>
</ol>
<p>處理資料的過程依賴數學模型、演算法與資料結構</p>
<p>取得與傳輸資料則依賴網路</p>
<p>至於資料的呈現則涵蓋 2D/3D 動態與靜態格式處理</p>
<ol>
<li>Tinkercad Circuit - Arduino 控制卡與電子致動與感測元件線路的模擬</li>
<li>網頁資料解讀與任務派送 - 計算機程式對特定格式資料的分析後, 依照循環與亂數流程進行分配</li>
<li>V-rep - 利用各種程式介面與延伸程式的設計, 讓使用者設計、控制並模擬各種機器人模型</li>
<li>輔助設計套件 - 利用計算機圖學與視窗介面, 讓使用者完成設想中的機械零組件設計, 並進行功能模擬</li>
</ol>
<h2>Tinkercad</h2>
<p>註冊 AutoDesk TinkerCAD 帳號</p>
<p>為了在實體 Arduino Uno 控制板連線操作之前, 可以利用網際 Auduino 控制板與電子元件系統進行模擬, 請各學員至<span>&nbsp;</span><a href="https://www.tinkercad.com/">https://www.tinkercad.com</a><span>&nbsp;</span>登記帳號, 登入後選擇左上角的 TinkerCAD 標誌連結後, 選擇 Circuits 進入電路設計與模擬, 操作畫面如下圖所示:</p>
<p><img src="/images/circuits_on_tinkercad.png" width="700" height="373" alt=""></p>
<p><span>接著選擇 Arudino Uno 控制板與 Servo Motor, 然後接上電源與地線, 並將控制訊號接到 Auduino Uno 控制板的 PWM pin 9, 利用 Code Editor 納入下列 Arduino 程式, 再利用 upload and run 將程式編譯後上傳到虛擬的 Arduino Uno 控制板上執行, 就可以模擬 Servo Motor 持續左右各旋轉 180 度. 操作畫面如下圖所示:&nbsp;</span></p>
<p><span><img src="/images/arduino_uno_servo_on_tinkercad.png" width="700" height="373" alt=""></span></p>
<p>實體 Arduino Servo Motor Control</p>
<p>完成上述以 TinkerCAD 模擬伺服馬達的接線與程式執行之後, 接著操作實體 Arduino 控制板與 Servo Motor 的控制, 首先利用電腦驅動 Arduino 控制板, 然後再利用板子上的脈衝寬度調變 (PWM, Pulse Width Modulation) 訊號控制伺服馬達, 之後再利用傳動機構與資訊控制介面, 製作所需的機電資整合系統. 電子電機系統除了可以方便感測各種物理化學量外, 還能夠快速傳遞感測與命令訊號, 而機械系統則透過機構元件的組合, 扮演傳遞功率致動或抵抗外力撞擊與疲勞破壞的角色, 至於資訊系統則用來整合各種資訊, 用更友善的人機介面, 讓使用者更有效能地運用機電資系統產品.</p>
<p><a href="https://mde1a1.kmol.info/2017fall/raw/arduino-1.8.5-windows.zip?name=4aee6f20d04156a10d1739e40f54cda7ef1b0e0e">arduino-1.8.4-windows.zip</a><span>&nbsp;</span>下載 (或直至<span>&nbsp;</span><a href="https://www.arduino.cc/en/Main/Software">https://www.arduino.cc/en/Main/Software</a><span>&nbsp;</span>下載)</p>
<p>控制台 - 硬體與音效 - 裝置管理員 利用解開的 arduino driver 程式驅動 Arduino Uno 控制板, 並取得 COM 對應號碼, 例如: COM7, 之後的 Arduino 編譯後可以透過此 COM 埠號將程式上傳到控制板上執行.</p>
<p>MG996R 伺服馬達</p>
<p>棕色線 GND</p>
<p>紅色線 V+5V</p>
<p>橘色線 PWM</p>
<p>控制程式:</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;Servo.h&gt;
Servo myservo;  // 建立一個 servo 物件，最多可建立 12個 servo

int pos = 0;    // 設定 Servo 位置的變數

void setup() {
  myservo.attach(9);  // 將 servo 物件連接到 pin 9
}

void loop() {
  // 正轉 180度
  for (pos = 0; pos &lt;= 180; pos += 1) // 從 0 度旋轉到 180 度，每次 1 度 
  {     
    myservo.write(pos);               // 告訴 servo 走到 'pos' 的位置
    delay(15);                        // 等待 15ms 讓 servo 走到指定位置
  }

// 反轉 180度
  for (pos = 180; pos &gt;= 0; pos -= 1) // 從 180 度旋轉到 0 度，每次 1 度 
  { 
    myservo.write(pos);               // 告訴 servo 走到 'pos' 的位置

delay(15);                        // 等待 15ms 讓 servo 走到指定位置
  }
}</pre>
<p>參考資料:</p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-3241-4">Beginning Arduino</a></p>
<p><a href="https://link.springer.com/book/10.1007/978-1-4302-3778-5">Beginning Arduino Programming</a></p>
<p><a href="http://www.playrobot.com/20kgf-cm/1150-standard-servo-mg996r.html">http://www.playrobot.com/20kgf-cm/1150-standard-servo-mg996r.html</a></p>
<p><a href="http://www.playrobot.com/freedownload/Arduino_Happy%20Learning_DEMO.pdf">http://www.playrobot.com/freedownload/Arduino_Happy%20Learning_DEMO.pdf</a></p>
<p><a href="http://atceiling.blogspot.tw/2017/03/arduino.html">http://atceiling.blogspot.tw/2017/03/arduino.html</a></p>
<p>Python, Arduino and VPython:</p>
<p><a href="http://www.toptechboy.com/arduino-lessons/">http://www.toptechboy.com/arduino-lessons/</a></p>
<p><a href="https://create.arduino.cc/projecthub/chanhj/magnetic-levitation-8c3ad0">Arduino Magnetic Levitation System</a></p>
<p><a href="http://www.instructables.com/id/Magnetic-Levitation/">http://www.instructables.com/id/Magnetic-Levitation/</a><span>&nbsp;</span>(<a href="https://www.amazon.com/Electromagnet-Solenoid-Electric-Mechanical-Experimental/dp/B008OENGU0/">電磁鐵1</a>,<span>&nbsp;</span><a href="http://goods.ruten.com.tw/item/show?21620739232041">電磁鐵2</a>)</p>
<p><a href="http://embeddedlaboratory.blogspot.tw/2017/04/design-gui-in-python-using-pyqt5.html">Arduino and PyQt5</a></p>
<p><a href="http://embeddedlaboratory.blogspot.tw/search/label/Arduino">http://embeddedlaboratory.blogspot.tw/search/label/Arduino</a></p>
<p><a href="http://electronut.in/plotting-real-time-data-from-arduino-using-python/">Arduino and Matplotlib</a></p>
<h2>解讀網頁內容</h2>
<p>Onshape 教學影片</p>
<p><a href="https://www.onshape.com/video">https://www.onshape.com/video</a><span>&nbsp;</span>為 Onshpae 官方網站所提供的教學影片區, 請各班以每人兩個影片的方式進行分配, 分別以中文說明影片內容操作過程, 並上傳到個人的 Vimeo 與 Youtube 影片區.</p>
<p>預計分配的影片:</p>
<p><a href="https://www.onshape.com/videos/topic/tech-tips">https://www.onshape.com/videos/topic/tech-tips</a></p>
<p><a href="https://www.onshape.com/videos/topic/intro-to-cad">https://www.onshape.com/videos/topic/intro-to-cad</a></p>
<p><a href="https://www.onshape.com/videos/topic/tutorials">https://www.onshape.com/videos/topic/tutorials</a></p>
<p><a href="https://www.onshape.com/videos/topic/essential-training">https://www.onshape.com/videos/topic/essential-training</a></p>
<p><a href="https://www.onshape.com/videos/topic/drawings">https://www.onshape.com/videos/topic/drawings</a></p>
<p>請各組討論:</p>
<p>如何分配影片?如何集合管理各學員所上傳的教學操作影片?</p>
<p>利用 Python3, urllib 與 bs4 解讀上述網頁內容, 取出各影片的連結, 然後放入數列中:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from urllib.request import urlopen
from bs4 import BeautifulSoup

file = urlopen("https://www.onshape.com/videos/topic/intro-to-cad")
#print(file.read().decode())

soup = BeautifulSoup(file, 'html.parser')

links = []
for link in soup.find_all('a', href=True):
    if 'videos' in link['href']:
        if 'https' in link['href']:
            #print(link['href'])
            links.append(link['href'])
result = list(set(links))
for i in range(len(result)):
    print(i+1, result[i])</pre>
<p><span>納入上述所有影片網頁連結, 利用程式取出各影片的連結字串:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 從 urllib 模組中導入 urlopen
from urllib.request import urlopen
# 從 bs4 模組中導入 BeautirulSoup
from bs4 import BeautifulSoup

# 將要取出影片連結的網站 url,  放入數列中, 取名為 sources
sources = ['https://www.onshape.com/videos/topic/tech-tips', 'https://www.onshape.com/videos/topic/intro-to-cad', 'https://www.onshape.com/videos/topic/tutorials', 'https://www.onshape.com/videos/topic/essential-training', 'https://www.onshape.com/videos/topic/drawings']

#tech-tips (60)
#intro-to-cad (26)
#tutorials (14)
#essential-training (6)
#drawings (5)

# 按照網頁中的影片數計算, 共有 111 部影片, 但分類中可能重複
print(60+26+14+6+5)

# 設 links 變數與空數列對應
links = []
# 利用 for 迴圈一一取出各網頁的 html 後, 進行解讀
# 只取出有 videos 與 https 連結的資料, 但避開 all 與 topic 類別連結
for url in sources:
    file = urlopen(url)
    # 因為 urlopen 出來的資料為二位元檔案, 若要讀出列印
    # 必須要先 decode() 為字串
    #print(file.read().decode())
    # 使用 html 解讀各連結的網頁內容
    soup = BeautifulSoup(file, 'html.parser')
    # 利用 Beautifulsoup 物件中的 find_all 方法尋找 anchor
    for link in soup.find_all('a', href=True):
        # 從各 anchor 資料篩選所需的影片連結
        if ('videos' or 'https') in link['href']:
            if 'all' not in link['href']:
                if 'topic' not in link['href']:
                    links.append(link['href'])
                    
# 為避免列出重複資料, 將數列轉為集合後, 再轉回數列
result = list(set(links))
# 逐一列出所取得的影片連結
for i in range(len(result)):
    print(i+1, result[i])</pre>
<p>以上述程式為基礎, 從取得的影片數列, 每位學員由亂數產生的影片順序, 前後各取一個影片作為分配, 結果如下:</p>
<p>甲班 Onshape 影片分配名單:</p>
<ul>
<li>40223109</li>
<li><a href="https://www.onshape.com/videos/first-look-at-onshape">https://www.onshape.com/videos/first-look-at-onshape</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part-mobile">https://www.onshape.com/videos/lets-make-a-part-mobile</a></li>
<li>40423160</li>
<li><a href="https://www.onshape.com/videos/lets-make-an-assembly">https://www.onshape.com/videos/lets-make-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-drawing">https://www.onshape.com/videos/lets-import-a-drawing</a></li>
<li>40423219</li>
<li><a href="https://www.onshape.com/videos/lets-collaborate">https://www.onshape.com/videos/lets-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/split-face">https://www.onshape.com/videos/split-face</a></li>
<li>40423246</li>
<li><a href="https://www.onshape.com/videos/creating-custom-features-06-15-17">https://www.onshape.com/videos/creating-custom-features-06-15-17</a></li>
<li><a href="https://www.onshape.com/videos/getting-started-with-openbom-in-onshape">https://www.onshape.com/videos/getting-started-with-openbom-in-onshape</a></li>
<li>40523101</li>
<li><a href="https://www.onshape.com/videos/furniture-industry">https://www.onshape.com/videos/furniture-industry</a></li>
<li><a href="https://www.onshape.com/videos/assembly-mates">https://www.onshape.com/videos/assembly-mates</a></li>
<li>40523102</li>
<li><a href="https://www.onshape.com/videos/collaboration-simultaneous-editing">https://www.onshape.com/videos/collaboration-simultaneous-editing</a></li>
<li><a href="https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape">https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape</a></li>
<li>40523104</li>
<li><a href="https://www.onshape.com/videos/intro-assemblies-and-subassemblies">https://www.onshape.com/videos/intro-assemblies-and-subassemblies</a></li>
<li><a href="https://www.onshape.com/videos/assembly-design-case-study">https://www.onshape.com/videos/assembly-design-case-study</a></li>
<li>40523105</li>
<li><a href="https://www.onshape.com/videos/working-with-existing-cad-files">https://www.onshape.com/videos/working-with-existing-cad-files</a></li>
<li><a href="https://www.onshape.com/videos/using-mate-connectors">https://www.onshape.com/videos/using-mate-connectors</a></li>
<li>40523106</li>
<li><a href="https://www.onshape.com/videos/essentials-multipart">https://www.onshape.com/videos/essentials-multipart</a></li>
<li><a href="https://www.onshape.com/videos/3-ways-collaborate">https://www.onshape.com/videos/3-ways-collaborate</a></li>
<li>40523107</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part">https://www.onshape.com/videos/lets-make-a-part</a></li>
<li><a href="https://www.onshape.com/videos/assemble-an-arbor-press">https://www.onshape.com/videos/assemble-an-arbor-press</a></li>
<li>40523108</li>
<li><a href="https://www.onshape.com/videos/direct-editing-with-variables">https://www.onshape.com/videos/direct-editing-with-variables</a></li>
<li><a href="https://www.onshape.com/videos/machine-part-design-case-study">https://www.onshape.com/videos/machine-part-design-case-study</a></li>
<li>40523109</li>
<li><a href="https://www.onshape.com/videos/edit-history-and-versioning">https://www.onshape.com/videos/edit-history-and-versioning</a></li>
<li><a href="https://www.onshape.com/videos/advanced-assembly-motion-06-22-17">https://www.onshape.com/videos/advanced-assembly-motion-06-22-17</a></li>
<li>40523111</li>
<li><a href="https://www.onshape.com/videos/sketching-basics-onshape">https://www.onshape.com/videos/sketching-basics-onshape</a></li>
<li><a href="https://www.onshape.com/videos/advanced-modeling-tools-and-workflows">https://www.onshape.com/videos/advanced-modeling-tools-and-workflows</a></li>
<li>40523112</li>
<li><a href="https://www.onshape.com/videos/merging-branches">https://www.onshape.com/videos/merging-branches</a></li>
<li><a href="https://www.onshape.com/videos/drawings">https://www.onshape.com/videos/drawings</a></li>
<li>40523113</li>
<li><a href="https://www.onshape.com/videos/creating-versions">https://www.onshape.com/videos/creating-versions</a></li>
<li><a href="https://www.onshape.com/videos/onshape-direct-editing-04-17-15">https://www.onshape.com/videos/onshape-direct-editing-04-17-15</a></li>
<li>40523114</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-sprocket">https://www.onshape.com/videos/lets-make-a-sprocket</a></li>
<li><a href="https://www.onshape.com/videos/managing-custom-properties-06-27-17">https://www.onshape.com/videos/managing-custom-properties-06-27-17</a></li>
<li>40523115</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-pipe-flange">https://www.onshape.com/videos/lets-make-a-pipe-flange</a></li>
<li><a href="https://www.onshape.com/videos/onshape-teams">https://www.onshape.com/videos/onshape-teams</a></li>
<li>40523116</li>
<li><a href="https://www.onshape.com/videos/fillet-and-chamfer">https://www.onshape.com/videos/fillet-and-chamfer</a></li>
<li><a href="https://www.onshape.com/videos/essentials-documents-ui">https://www.onshape.com/videos/essentials-documents-ui</a></li>
<li>40523117</li>
<li><a href="https://www.onshape.com/videos/mixing-units-and-fractions">https://www.onshape.com/videos/mixing-units-and-fractions</a></li>
<li><a href="https://www.onshape.com/videos/designing-fixtures">https://www.onshape.com/videos/designing-fixtures</a></li>
<li>40523118</li>
<li><a href="https://www.onshape.com/videos/lofting-in-onshape">https://www.onshape.com/videos/lofting-in-onshape</a></li>
<li><a href="https://www.onshape.com/videos/multipart-design">https://www.onshape.com/videos/multipart-design</a></li>
<li>40523119</li>
<li><a href="https://www.onshape.com/videos/creating-weldments">https://www.onshape.com/videos/creating-weldments</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-the-onshape-app">https://www.onshape.com/videos/3-examples-of-using-the-onshape-app</a></li>
<li>40523120</li>
<li><a href="https://www.onshape.com/videos/lets-import-an-assembly">https://www.onshape.com/videos/lets-import-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/onshape-mobile">https://www.onshape.com/videos/onshape-mobile</a></li>
<li>40523121</li>
<li><a href="https://www.onshape.com/videos/design-in-context">https://www.onshape.com/videos/design-in-context</a></li>
<li><a href="https://www.onshape.com/videos/feedback-tool">https://www.onshape.com/videos/feedback-tool</a></li>
<li>40523122</li>
<li><a href="https://www.onshape.com/videos/software-overview-and-user-interface-tour">https://www.onshape.com/videos/software-overview-and-user-interface-tour</a></li>
<li><a href="https://www.onshape.com/videos/revolve">https://www.onshape.com/videos/revolve</a></li>
<li>40523123</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-nut">https://www.onshape.com/videos/lets-make-a-nut</a></li>
<li><a href="https://www.onshape.com/videos/using-supplier-models">https://www.onshape.com/videos/using-supplier-models</a></li>
<li>40523124</li>
<li><a href="https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17">https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17</a></li>
<li><a href="https://www.onshape.com/videos/import-export">https://www.onshape.com/videos/import-export</a></li>
<li>40523125</li>
<li><a href="https://www.onshape.com/videos/measure-tool">https://www.onshape.com/videos/measure-tool</a></li>
<li><a href="https://www.onshape.com/videos/shell-and-draft">https://www.onshape.com/videos/shell-and-draft</a></li>
<li>40523126</li>
<li><a href="https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study">https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study</a></li>
<li><a href="https://www.onshape.com/videos/android">https://www.onshape.com/videos/android</a></li>
<li>40523127</li>
<li><a href="https://www.onshape.com/videos/medical-device-case-study">https://www.onshape.com/videos/medical-device-case-study</a></li>
<li><a href="https://www.onshape.com/videos/assemble-gears">https://www.onshape.com/videos/assemble-gears</a></li>
<li>40523128</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-drawing">https://www.onshape.com/videos/lets-make-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/designing-linkages-in-context">https://www.onshape.com/videos/designing-linkages-in-context</a></li>
<li>40523129</li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li>40523130</li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li>40523131</li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li>40523132</li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li>40523133</li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li>40523134</li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li>40523135</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li>40523136</li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li>40523137</li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li>40523138</li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li>40523139</li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li>40523140</li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li>40523141</li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li>40523142</li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li>40523143</li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li>40523144</li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li>40523145</li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li>40523146</li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li>40523147</li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li>40523148</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
</ul>
<p>乙班 Onshape 影片分配名單:</p>
<ul>
<li>40023139</li>
<li><a href="https://www.onshape.com/videos/first-look-at-onshape">https://www.onshape.com/videos/first-look-at-onshape</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part-mobile">https://www.onshape.com/videos/lets-make-a-part-mobile</a></li>
<li>40223208</li>
<li><a href="https://www.onshape.com/videos/lets-make-an-assembly">https://www.onshape.com/videos/lets-make-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-drawing">https://www.onshape.com/videos/lets-import-a-drawing</a></li>
<li>40371215</li>
<li><a href="https://www.onshape.com/videos/lets-collaborate">https://www.onshape.com/videos/lets-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/split-face">https://www.onshape.com/videos/split-face</a></li>
<li>40371235</li>
<li><a href="https://www.onshape.com/videos/creating-custom-features-06-15-17">https://www.onshape.com/videos/creating-custom-features-06-15-17</a></li>
<li><a href="https://www.onshape.com/videos/getting-started-with-openbom-in-onshape">https://www.onshape.com/videos/getting-started-with-openbom-in-onshape</a></li>
<li>40423159</li>
<li><a href="https://www.onshape.com/videos/furniture-industry">https://www.onshape.com/videos/furniture-industry</a></li>
<li><a href="https://www.onshape.com/videos/assembly-mates">https://www.onshape.com/videos/assembly-mates</a></li>
<li>40423204</li>
<li><a href="https://www.onshape.com/videos/collaboration-simultaneous-editing">https://www.onshape.com/videos/collaboration-simultaneous-editing</a></li>
<li><a href="https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape">https://www.onshape.com/videos/understanding-full-cloud-cad-and-onshape</a></li>
<li>40423207</li>
<li><a href="https://www.onshape.com/videos/intro-assemblies-and-subassemblies">https://www.onshape.com/videos/intro-assemblies-and-subassemblies</a></li>
<li><a href="https://www.onshape.com/videos/assembly-design-case-study">https://www.onshape.com/videos/assembly-design-case-study</a></li>
<li>40423213</li>
<li><a href="https://www.onshape.com/videos/working-with-existing-cad-files">https://www.onshape.com/videos/working-with-existing-cad-files</a></li>
<li><a href="https://www.onshape.com/videos/using-mate-connectors">https://www.onshape.com/videos/using-mate-connectors</a></li>
<li>40423220</li>
<li><a href="https://www.onshape.com/videos/essentials-multipart">https://www.onshape.com/videos/essentials-multipart</a></li>
<li><a href="https://www.onshape.com/videos/3-ways-collaborate">https://www.onshape.com/videos/3-ways-collaborate</a></li>
<li>40423224</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-part">https://www.onshape.com/videos/lets-make-a-part</a></li>
<li><a href="https://www.onshape.com/videos/assemble-an-arbor-press">https://www.onshape.com/videos/assemble-an-arbor-press</a></li>
<li>40423231</li>
<li><a href="https://www.onshape.com/videos/direct-editing-with-variables">https://www.onshape.com/videos/direct-editing-with-variables</a></li>
<li><a href="https://www.onshape.com/videos/machine-part-design-case-study">https://www.onshape.com/videos/machine-part-design-case-study</a></li>
<li>40423233</li>
<li><a href="https://www.onshape.com/videos/edit-history-and-versioning">https://www.onshape.com/videos/edit-history-and-versioning</a></li>
<li><a href="https://www.onshape.com/videos/advanced-assembly-motion-06-22-17">https://www.onshape.com/videos/advanced-assembly-motion-06-22-17</a></li>
<li>40423241</li>
<li><a href="https://www.onshape.com/videos/sketching-basics-onshape">https://www.onshape.com/videos/sketching-basics-onshape</a></li>
<li><a href="https://www.onshape.com/videos/advanced-modeling-tools-and-workflows">https://www.onshape.com/videos/advanced-modeling-tools-and-workflows</a></li>
<li>40423250</li>
<li><a href="https://www.onshape.com/videos/merging-branches">https://www.onshape.com/videos/merging-branches</a></li>
<li><a href="https://www.onshape.com/videos/drawings">https://www.onshape.com/videos/drawings</a></li>
<li>40523201</li>
<li><a href="https://www.onshape.com/videos/creating-versions">https://www.onshape.com/videos/creating-versions</a></li>
<li><a href="https://www.onshape.com/videos/onshape-direct-editing-04-17-15">https://www.onshape.com/videos/onshape-direct-editing-04-17-15</a></li>
<li>40523203</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-sprocket">https://www.onshape.com/videos/lets-make-a-sprocket</a></li>
<li><a href="https://www.onshape.com/videos/managing-custom-properties-06-27-17">https://www.onshape.com/videos/managing-custom-properties-06-27-17</a></li>
<li>40523204</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-pipe-flange">https://www.onshape.com/videos/lets-make-a-pipe-flange</a></li>
<li><a href="https://www.onshape.com/videos/onshape-teams">https://www.onshape.com/videos/onshape-teams</a></li>
<li>40523205</li>
<li><a href="https://www.onshape.com/videos/fillet-and-chamfer">https://www.onshape.com/videos/fillet-and-chamfer</a></li>
<li><a href="https://www.onshape.com/videos/essentials-documents-ui">https://www.onshape.com/videos/essentials-documents-ui</a></li>
<li>40523206</li>
<li><a href="https://www.onshape.com/videos/mixing-units-and-fractions">https://www.onshape.com/videos/mixing-units-and-fractions</a></li>
<li><a href="https://www.onshape.com/videos/designing-fixtures">https://www.onshape.com/videos/designing-fixtures</a></li>
<li>40523207</li>
<li><a href="https://www.onshape.com/videos/lofting-in-onshape">https://www.onshape.com/videos/lofting-in-onshape</a></li>
<li><a href="https://www.onshape.com/videos/multipart-design">https://www.onshape.com/videos/multipart-design</a></li>
<li>40523209</li>
<li><a href="https://www.onshape.com/videos/creating-weldments">https://www.onshape.com/videos/creating-weldments</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-the-onshape-app">https://www.onshape.com/videos/3-examples-of-using-the-onshape-app</a></li>
<li>40523210</li>
<li><a href="https://www.onshape.com/videos/lets-import-an-assembly">https://www.onshape.com/videos/lets-import-an-assembly</a></li>
<li><a href="https://www.onshape.com/videos/onshape-mobile">https://www.onshape.com/videos/onshape-mobile</a></li>
<li>40523211</li>
<li><a href="https://www.onshape.com/videos/design-in-context">https://www.onshape.com/videos/design-in-context</a></li>
<li><a href="https://www.onshape.com/videos/feedback-tool">https://www.onshape.com/videos/feedback-tool</a></li>
<li>40523212</li>
<li><a href="https://www.onshape.com/videos/software-overview-and-user-interface-tour">https://www.onshape.com/videos/software-overview-and-user-interface-tour</a></li>
<li><a href="https://www.onshape.com/videos/revolve">https://www.onshape.com/videos/revolve</a></li>
<li>40523213</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-nut">https://www.onshape.com/videos/lets-make-a-nut</a></li>
<li><a href="https://www.onshape.com/videos/using-supplier-models">https://www.onshape.com/videos/using-supplier-models</a></li>
<li>40523214</li>
<li><a href="https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17">https://www.onshape.com/videos/tips-and-tricks-for-the-loft-command-06-20-17</a></li>
<li><a href="https://www.onshape.com/videos/import-export">https://www.onshape.com/videos/import-export</a></li>
<li>40523215</li>
<li><a href="https://www.onshape.com/videos/measure-tool">https://www.onshape.com/videos/measure-tool</a></li>
<li><a href="https://www.onshape.com/videos/shell-and-draft">https://www.onshape.com/videos/shell-and-draft</a></li>
<li>40523216</li>
<li><a href="https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study">https://www.onshape.com/videos/plastic-design-and-consumer-product-case-study</a></li>
<li><a href="https://www.onshape.com/videos/android">https://www.onshape.com/videos/android</a></li>
<li>40523217</li>
<li><a href="https://www.onshape.com/videos/medical-device-case-study">https://www.onshape.com/videos/medical-device-case-study</a></li>
<li><a href="https://www.onshape.com/videos/assemble-gears">https://www.onshape.com/videos/assemble-gears</a></li>
<li>40523218</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-drawing">https://www.onshape.com/videos/lets-make-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/designing-linkages-in-context">https://www.onshape.com/videos/designing-linkages-in-context</a></li>
<li>40523219</li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li>40523220</li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li>40523222</li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li>40523224</li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li>40523226</li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li>40523227</li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li>40523229</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li>40523230</li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li>40523231</li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li>40523232</li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li>40523233</li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li>40523234</li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li>40523236</li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li>40523237</li>
<li><a href="https://www.onshape.com/videos/dimensions-and-constraints">https://www.onshape.com/videos/dimensions-and-constraints</a></li>
<li><a href="https://www.onshape.com/videos/extrude">https://www.onshape.com/videos/extrude</a></li>
<li>40523238</li>
<li><a href="https://www.onshape.com/videos/sheet-metal">https://www.onshape.com/videos/sheet-metal</a></li>
<li><a href="https://www.onshape.com/videos/sweep">https://www.onshape.com/videos/sweep</a></li>
<li>40523239</li>
<li><a href="https://www.onshape.com/videos/split">https://www.onshape.com/videos/split</a></li>
<li><a href="https://www.onshape.com/videos/loft">https://www.onshape.com/videos/loft</a></li>
<li>40523240</li>
<li><a href="https://www.onshape.com/videos/essentials-onshape-mobile">https://www.onshape.com/videos/essentials-onshape-mobile</a></li>
<li><a href="https://www.onshape.com/videos/starting-a-design">https://www.onshape.com/videos/starting-a-design</a></li>
<li>40523241</li>
<li><a href="https://www.onshape.com/videos/onshape-drawings-webinar">https://www.onshape.com/videos/onshape-drawings-webinar</a></li>
<li><a href="https://www.onshape.com/videos/onshape-documents">https://www.onshape.com/videos/onshape-documents</a></li>
<li>40523242</li>
<li><a href="https://www.onshape.com/videos/compare">https://www.onshape.com/videos/compare</a></li>
<li><a href="https://www.onshape.com/videos/basic-part-design">https://www.onshape.com/videos/basic-part-design</a></li>
<li>40523243</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-u-bolt">https://www.onshape.com/videos/lets-make-a-u-bolt</a></li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly">https://www.onshape.com/videos/onshape-cad-tutorial-build-your-first-assembly</a></li>
<li>40523244</li>
<li><a href="https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing">https://www.onshape.com/videos/onshape-cad-tutorial-creating-a-drawing</a></li>
<li><a href="https://www.onshape.com/videos/direct-editing-onshape">https://www.onshape.com/videos/direct-editing-onshape</a></li>
<li>40523245</li>
<li><a href="https://www.onshape.com/videos/secrets-of-the-shift-key">https://www.onshape.com/videos/secrets-of-the-shift-key</a></li>
<li><a href="https://www.onshape.com/videos/design-intent">https://www.onshape.com/videos/design-intent</a></li>
<li>40523246</li>
<li><a href="https://www.onshape.com/videos/essentials-part-studios">https://www.onshape.com/videos/essentials-part-studios</a></li>
<li><a href="https://www.onshape.com/videos/sketch-constraints">https://www.onshape.com/videos/sketch-constraints</a></li>
<li>40523248</li>
<li><a href="https://www.onshape.com/videos/lets-make-a-frame-guide">https://www.onshape.com/videos/lets-make-a-frame-guide</a></li>
<li><a href="https://www.onshape.com/videos/essentials-assembly-basics">https://www.onshape.com/videos/essentials-assembly-basics</a></li>
<li>40523249</li>
<li><a href="https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling">https://www.onshape.com/videos/parametric-modeling-and-feature-based-modeling</a></li>
<li><a href="https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate">https://www.onshape.com/videos/3-examples-of-using-onshape-to-collaborate</a></li>
<li>40523250</li>
<li><a href="https://www.onshape.com/videos/lets-import-a-part">https://www.onshape.com/videos/lets-import-a-part</a></li>
<li><a href="https://www.onshape.com/videos/documents-and-tabs">https://www.onshape.com/videos/documents-and-tabs</a></li>
</ul>
<h2>輔助設計套件</h2>
<p>MCAD 套件</p>
<p><a href="http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-what-is-computer-aided-design.html">http://lab.kmol.info/2017fall/blog/kmol-2017-fall-cadp-what-is-computer-aided-design.html</a>&nbsp;</p>
<p>一般常見的機械電腦輔助設計套件包括法國<span>&nbsp;</span><a href="https://www.3ds.com/">Dassault</a><span>&nbsp;</span>公司的<span>&nbsp;</span><a href="https://www.3ds.com/products-services/solidworks/">SolidWorks</a><span>&nbsp;</span>與<span>&nbsp;</span><a href="https://www.3ds.com/products-services/catia/">Catia</a>, 美國<span>&nbsp;</span><a href="https://www.autodesk.com.tw/">AutoDesk</a><span>&nbsp;</span>公司的<span>&nbsp;</span><a href="https://www.autodesk.com.tw/products/autocad/">AutoCAD</a><span>&nbsp;</span>與<span>&nbsp;</span><a href="https://www.autodesk.com/products/inventor/overview">Inventor</a>, 德國<span>&nbsp;</span><a href="https://www.siemens.com/tw/zh/home.html">Siemens</a><span>&nbsp;</span>公司的<span>&nbsp;</span><a href="https://www.plm.automation.siemens.com/en/products/solid-edge/">Solid Edge</a><span>&nbsp;</span>與<span>&nbsp;</span><a href="https://www.plm.automation.siemens.com/zh/products/nx/index.shtml">NX</a>, 美國<span>&nbsp;</span><a href="http://www.ptc-taiwan.com/">PTC</a><span>&nbsp;</span>公司的<span>&nbsp;</span><a href="http://www.ptc-taiwan.com/cad">Creo</a>, 以及 2015 年推出的<span>&nbsp;</span><a href="https://www.onshape.com/">Onshape</a></p>
<p>其他 MCAD: 俄羅斯的<span>&nbsp;</span><a href="http://www.tflex.com/resources/tflexcadst/download/">T-Flex</a></p>
<p>如何進行電腦輔助機械設計專題</p>
<p>1. 文獻回顧 (Literature Review) 階段 - 了解現存既有的研究成果, 確立專題定位與目標</p>
<p>利用關鍵字搜尋相關文獻, 針對文獻回顧與探討, 初步定位專案性質以及從事專案的目標.</p>
<p>例如, 關鍵字:<span>&nbsp;</span><a href="https://www.google.com.tw/search?q=marble+machine+construction+set">marble machine construction set</a>,<span>&nbsp;</span><a href="https://www.google.com.tw/search?q=linkage+synthesis">linkage synthesis</a>,<span>&nbsp;</span><a href="https://www.google.com.tw/search?q=arduino+mechatronics">arduino mechatronics</a>,<span>&nbsp;</span><a href="https://www.google.com.tw/search?q=arduino+servo+control">arduino servo control</a>,<span>&nbsp;</span><a href="https://www.google.com.tw/search?q=lifter+linkage">lifter linkage</a>,<span>&nbsp;</span><a href="https://mde1a1.kmol.info/2017fall/raw/doing+a+literature+review.pdf?name=566d6dab70c1a7e7458a2c10c667416fea048170">Doing a Literature Review</a></p>
<p>2. 整理可用工具, 擬想何謂機械?何謂設計?何謂電腦輔助?擬想所要解決的問題, 準備開始進行電腦輔助機械設計專題</p>
<p>機械是一種功能明確的器物, 內容包含固體、流體與軟體元件, 彼此精巧配置結合, 可展現特定功能</p>
<p>設計是一種表達, 而且是可以讓人依循, 逐步按照指示, 完成設計者預想的結果, 且表達方法包含文字、口語、2D、3D、數學與實體方法.</p>
<p>文字結合 2D、3D、數學表達方法 - 設計專題報告</p>
<p>利用口語簡報設計專題內容 - 設計專題報告影片</p>
<p>電腦輔助 - 利用電腦的功能協助設計進行</p>
<p>電腦功能 - 設計組態管理、運算、模擬、網路資訊傳輸、展示、協同</p>
<p>例如:</p>
<p>零組件繪圖工具:<span>&nbsp;</span><a href="http://solvespace.com/">Solvespace</a><span>&nbsp;</span>(包含在隨身系統),<span>&nbsp;</span><a href="http://www.onshape.com/">Onshape</a><span>&nbsp;</span>(自行申請帳號),<span>&nbsp;</span><a href="http://www.ptc-taiwan.com/cad/creo">PTC Creo Parametric</a><span>&nbsp;</span>(可從區網下載可攜網路認證版本) ,<span>&nbsp;</span><a href="https://www.autodesk.com/products/inventor/overview">Autodesk Inventor</a><span>&nbsp;</span>(可自行申請免費學生版本或安裝系上提供之網路認證版本),<span>&nbsp;</span><a href="http://www.solidworks.com.cn/">Dassault Solidworks</a><span>&nbsp;</span>(可安裝學校提供之網路認證版本).</p>
<p>協同工具:<span>&nbsp;</span><a href="http://www.onshape.com/">Onshape</a><span>&nbsp;</span>(自行申請帳號),<span>&nbsp;</span><a href="https://a360.autodesk.com/">A360</a><span>&nbsp;</span>(自行申請帳號)</p>
<p>模擬工具:<span>&nbsp;</span><a href="http://www.coppeliarobotics.com/">V-rep</a><span>&nbsp;</span>(包含在隨身系統),<span>&nbsp;</span><a href="https://www.blender.org/">Blender</a><span>&nbsp;</span>(包含在隨身系統),<span>&nbsp;</span><a href="https://www.tinkercad.com/">Tinkercad</a><span>&nbsp;</span>(自行申請帳號)</p>
<p>控制與致動工具:<span>&nbsp;</span><a href="https://www.arduino.cc/">Arduino</a><span>&nbsp;</span>(包含在工具箱中),<span>&nbsp;</span><a href="http://www.instructables.com/id/Arduino-Servo-Motors/">Servo Motor</a><span>&nbsp;</span>(包含在工具箱中)</p>
<p>3D 列印工具:<span>&nbsp;</span><a href="http://atom3dp.com/">Delta Printer</a><span>&nbsp;</span>(由系上實習設備提供)</p>
<p>3. 根據專題定位與目標, 確定所要解決的問題項目, 逐一採模組式, 以協同流程, 透過自學、執行與檢討想像, 由簡入繁, 持續改進各模組的內容與功能, 在可用時間內, 解決各種問題, 終至完成專題, 達成目標.</p>
<p>鋼球循環運動系統設計</p>
<p>機構設計 - 軌道設計、鋼球提升與傳動系統設計、其他零組件設計</p>
<p>致動與控制系統設計 - 電路設計、伺服馬達致動程式設計</p>
<p>監控程式設計 - 以視窗程式啟動系統運作、傳回鋼球通過控制點訊息、計算運行距離與速度</p>
<p>marble lift mechanism</p>
<p>四連桿浮動桿通過三個位置的尺寸合成設計</p>
<p>六連桿尺寸合成</p>
<p>八連桿尺寸合成</p>
<p><a href="http://www.eddiesmind.com/basic-lifting-mechanisms.html">http://www.eddiesmind.com/basic-lifting-mechanisms.html</a></p>
<p>Linkage:<span>&nbsp;</span><a href="http://blog.rectorsquid.com/linkage-mechanism-designer-and-simulator/">http://blog.rectorsquid.com/linkage-mechanism-designer-and-simulator/</a><span>&nbsp;</span>(<a href="https://github.com/rectorsquid/Linkage">Source codes</a>)</p>
<p>LinkageDesigner (an add-on package to Wolfram's Mathematica):<span>&nbsp;</span><a href="http://www.linkagedesigner.com/">http://www.linkagedesigner.com/</a>,<span>&nbsp;</span><a href="https://www.wolfram.com/products/applications/linkagedesigner/">https://www.wolfram.com/products/applications/linkagedesigner/</a></p>
<p><a href="https://github.com/KmolYuan/Pyslvs-PyQt5">https://github.com/KmolYuan/Pyslvs-PyQt5</a></p>
<h1>分組專題</h1>
<p>分組專題報告</p>
<p>章節</p>
<ul>
<li>標題頁 - 含報告標題、作者、日期與所屬單位</li>
<li>目錄 - 列出全文章節與所屬頁面連結</li>
<li>摘要 - 解釋報告編寫動機、報告重點、結論、建議與關鍵字</li>
<li>前言 - 簡要描述全文意旨與背景, 說明報告目標與報告內容組成架構</li>
<li>內文 - 依照章節標題, 詳細說明報告內容, 包括方法、操作步驟與所得結果的詳細說明</li>
<li>結論 - 條列所獲致的重要成果, 與摘要及導言中的目標互相呼應</li>
<li>討論與建議 - 說明後續值得進行的方向、方法與可能遭遇問題的討論</li>
<li>參考 - 詳列所引用的參考內容</li>
<li>附錄 - 附加值得參考的詳細內容</li>
</ul>
<h2>3D 列印機</h2><p>分組專題人員: 六人</p><p><span>設計模擬: 三人</span></p><p>組立製作: 三人</p><p>XYZ 架構</p><p><a href="https://github.com/mdecourse/kll3pp">https://github.com/mdecourse/kll3pp</a>&nbsp;</p><p><a href="https://cad.onshape.com/documents/d2e8a54fc59d1a20435d8dd2/w/8ff652a5f6c61e4648cb5a0b/e/cce13c0f443986af885c79ff">Onshape 零組件</a></p><p><img src="/images/kll3pp.jpg" width="600" height="800" alt=""></p><p><img src="/images/kll3pp.png" width="600" height="338" alt=""></p><p>Delta 架構</p><p>分組專題人員: 六人</p><p><a href="https://cad.onshape.com/documents/5857da172c6401109cd59c40/w/3c12983596f0b655e19c8242/e/acc3c9a33b806c014834c490">Delta 3D 印表機</a> (<a href="https://www.onshape.com/">Onshape</a> 連結)</p><p><img src="/images/delta3dPrinter.jpg" width="384" height="752" alt=""></p><h2>行走機構</h2>
<p>主動式行走機構 - Active Walker - 以馬達驅動行走</p>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><a href="https://cad.onshape.com/documents/96be21438ae9f607a1911459/w/9587e92def580a31ac504bce/e/c02e184cc4dede90f6842cda">Jansen_walker</a> in <a href="https://www.onshape.com/">Onshape</a></p>
<p><img src="/images/Jansen_walker.jpg" width="600" height="449" alt=""></p>
<p>被動式行走機構 - Passive Walker - 以重力在斜坡或移動平台上行走</p>
<p>分組專題人員: 六人&nbsp;</p>
<p><a href="https://www.onshape.com/">Onshape</a> 設計, <a href="http://www.coppeliarobotics.com/">V-rep</a> 模擬</p>
<p><a href="https://www.cs.cmu.edu/~hgeyer/Teaching/R16-899B/Papers/McGeer90IJRR.pdf">Passive dynamic walking</a></p>
<p><a href="https://en.wikipedia.org/wiki/Passive_dynamics">Passive dynamics</a></p>
<p><a href="https://ieeexplore.ieee.org/abstract/document/945523/"><span ng-bind-html="vm.displayDocTitle" mathjax-bind="" class="ng-binding">Biped walking robot control with passive walker model by new VSC servo</span></a></p>
<p><a href="https://www.eucognition.org/index.php?page=passive-dynamic-walkers"><span ng-bind-html="vm.displayDocTitle" mathjax-bind="" class="ng-binding">Passive dynamic walker</span></a></p>
<p><a href="http://www-personal.umich.edu/~artkuo/Passive_Walk/passive_walking.html"><span ng-bind-html="vm.displayDocTitle" mathjax-bind="" class="ng-binding">Passive walking</span></a></p>
<p><a href="http://groups.csail.mit.edu/robotics-center/public_papers/Tedrake04.pdf"><span ng-bind-html="vm.displayDocTitle" mathjax-bind="" class="ng-binding">Actuating a Simple 3D Passive Dynamic Walker</span></a></p>
<p><a href="http://biomechanical.asmedigitalcollection.asme.org/article.aspx?articleid=1401236"><span id="scm6MainContent_lblArticleTitle">The Simplest Walking Model: Stability, Complexity, and Scaling</span></a></p>
<p><span>專題目的: <a href="https://ir.nctu.edu.tw/bitstream/11536/44666/1/450801.pdf">創新步行輔助機構之設計與應用</a></span></p><h2>鋼球運動系統</h2>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/lQvcoOzmLqs" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe></p><h2>虛實手足球</h2>
<p>分組專題人員: 六人</p>
<p><span>設計模擬: 三人</span></p>
<p>組立製作: 三人</p>
<p><a href="https://en.wikipedia.org/wiki/Table_football">Table Football Machine</a></p>
<ol>
<li>利用 <a href="https://www.onshape.com/">Onshape</a> 或 <a href="http://solvespace.com">Solvespace</a> 設計所需零組件</li>
<li>將模型輸入 V-rep 後, 以 Lua 控制各零組件運動, 進行初步測試</li>
<li>利用 Python 程式, 透過網路, 由競賽雙方以 Rempte API 型式, 操控足球員動作</li>
<li>虛擬系統完成後, 設計外部實體電子控制系統, 操控虛擬足球員, 或反向運作</li>
</ol>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/0qE_a0wFRa0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe></p><h2>機械計時器</h2>
<p><span>分組專題人員: 六人</span></p>
<p><span>設計模擬: 三人</span></p>
<p>列印製作: 三人</p>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/ir6KkKH0LJw" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe></p>
<h2>摺疊自行車</h2>
<p>1/18 Scale folding bike 摺疊自行車模型設計製作</p>
<p><span>分組專題人員: 六人</span></p>
<p><iframe width="560" height="315" src="https://www.youtube.com/embed/mNPXl2QQNCk" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe></p>
<p>參考資料:</p>
<p><a href="http://rattlecad.sourceforge.net/">http://rattlecad.sourceforge.net/</a>&nbsp;</p><h2>方程式賽車</h2>
<p>1/18 Scale Forumla Student Racing Car</p>
<p><span>分組專題人員: 六人</span></p>
<p><a href="https://www.formulastudent.de/uploads/media/FS-Rules_2018_V1.1.pdf">Forumla Student Rules 2018</a></p>
<p><iframe width="640px" height="480px" src="http://caesor.github.io/racing-game/"></iframe></p>
<p>參考資料:</p>
<p><a href="https://uwformula.com/">https://uwformula.com/</a>&nbsp;</p>
<p><a href="http://learnmech.com/">http://learnmech.com/</a>&nbsp;</p>
<p><a href="https://github.com/Caesor/racing-game">https://github.com/Caesor/racing-game</a>&nbsp;</p>
<p><a href="https://www.kingautos.net/212575">https://www.kingautos.net/212575</a>&nbsp;</p>
<p><a href="https://news.tvbs.com.tw/fun/670993">https://news.tvbs.com.tw/fun/670993</a>&nbsp;</p>
<p><a href="http://www.pme.nthu.edu.tw/files/14-1265-124394,r4641-1.php?Lang=zh-tw">http://www.pme.nthu.edu.tw/files/14-1265-124394,r4641-1.php?Lang=zh-tw</a>&nbsp;</p>
<p><a href="https://insight.udndata.com/ndapp/udntag/finance/Article?origid=9058520">https://insight.udndata.com/ndapp/udntag/finance/Article?origid=9058520</a>&nbsp;</p>